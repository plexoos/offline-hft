From 991467b17e305745aa3f46c8c918d028b4edb833 Mon Sep 17 00:00:00 2001
From: Dmitri Smirnov <d.s@plexoos.com>
Date: Thu, 24 Apr 2014 16:28:11 -0400
Subject: [PATCH] Squashed changes for StBFChain.patch

---
 BigFullChain.h | 23 ++++++++++++++++++++++-
 StBFChain.cxx  | 17 +++++++++++++++++
 2 files changed, 39 insertions(+), 1 deletion(-)

diff --git a/BigFullChain.h b/BigFullChain.h
index 60426a4..7f7e50d 100644
--- a/BigFullChain.h
+++ b/BigFullChain.h
@@ -1246,7 +1246,6 @@ Bfc_st BFC[] = {
   {"eemcDb"      ,"eeDb" ,"","db,EEmcUtil",      "StEEmcDbMaker","StEEmcDbMaker","Load EEmcDbMaker",kFALSE},
   {"fmsDb"       ,"fmsDb","","db",                  "StFmsDbMaker","StFmsDbMaker","Load FmsDbMaker",kFALSE},
   {"fgtDb"       ,"fgtDb","","db,fgtutil",          "StFgtDbMaker","StFgtDbMaker","Load FgtDbMaker",kFALSE},
-  {"pxlDb"       ,"pxlDb","","tpcDb",               "StPxlDbMaker","StPxlDbMaker","Load PxlDbMaker",kFALSE},
   {"istDb"       ,"istDb","","tpcDb",               "StIstDbMaker","StIstDbMaker","Load IstDbMaker",kFALSE},
 
   {"------------","-----------","-----------","------------------------------------------","","","",kFALSE},
@@ -1361,6 +1360,18 @@ Bfc_st BFC[] = {
   {"Event"       ,  "","","MakeEvent",                          "","","Request to initialize event",kFALSE},
   {"pxlFastSim","","","StMcEvent,StEvent"
    ,                               "StPxlSimMaker","StPxlSimMaker","FastPixelSimulator",kFALSE},
+  {"pxlDb"      , "" , "" , "pxlUtil tpcDb"       , "StPxlDbMaker"          , "StPxlDbMaker"                            , "Load and run StPxlDbMaker"          , kFALSE} , 
+  {"pxlRaw"     , "" , "" , "pxlUtil"             , "StPxlRawHitMaker"      , "StPxlRawHitMaker"                        , "Load and run StPxlRawHitMaker"      , kFALSE} , 
+  {"pxlCluster" , "" , "" , "pxlUtil"             , "StPxlClusterMaker"     , "StPxlClusterMaker"                       , "Load and run StPxlClusterMaker"     , kFALSE} , 
+  {"pxlHit"     , "" , "" , "pxlUtil event pxlDb" , "StPxlHitMaker"         , "StPxlHitMaker"                           , "Load and run StPxlHitMaker"         , kFALSE} , 
+  {"pxlMon"     , "" , "" , "StEvent"             , "StPxlMonMaker"         , "StPxlMonMaker"                           , "Produce QA histograms for PXL"      , kFALSE} , 
+  {"istFastSim" , "" , "" , "StMcEvent StEvent"   , "StIstFastSimMaker"     , "StIstFastSimMaker"                       , "Load and run StFastIstSimulator"    , kFALSE} , 
+  {"istRaw"     , "" , "" , "istUtil istDb"       , "StIstRawHitMaker"      , "StIstRawHitMaker"                        , "Load and run StIstRawHitMaker"      , kFALSE} , 
+  {"istCluster" , "" , "" , "istUtil"             , "StIstClusterMaker"     , "StIstClusterMaker"                       , "Load and run StIstClusterMaker"     , kFALSE} , 
+  {"istHit"     , "" , "" , "istUtil event istDb" , "StIstHitMaker"         , "StIstHitMaker"                           , "Load and run StIstHitMaker"         , kFALSE} , 
+  {"istQA"      , "" , "" , "istUtil StEvent"     , "StIstQAMaker"          , "StIstQAMaker"                            , "Produce QA histograms for IST"      , kFALSE} , 
+  {"istCalib"   , "" , "" , "istUtil"             , "StIstCalibrationMaker" , "StIstCalibrationMaker"                   , "Load and run StIstCalibrationMaker" , kFALSE} , 
+  {"HftMatTree" , "" , "" , "pxlUtil"             , "HftMatchedTree"        , "StHftPoolEventT StHftPoolHftMatchedTree" , "Create HftMatchedTree"              , kFALSE} , 
   {"ssddat"      ,"","","ssd_daq"                             ,"","","SSD full chain for Real Data",kFALSE},
   {"ssd_daq","","","ssdCalDb,svt_T,-sls,-spa,ssdUtil","StSsdDaqMaker","StSsdDaqMaker","... SSD Daq",kFALSE},
   {"ssdfast"     ,"","","ssdDb,StMcEvent,StEvent","StSsdFastSimMaker","StSsdFastSimMaker",
@@ -1461,6 +1472,15 @@ Bfc_st BFC[] = {
   {"StiSst"   ,"","",""                        ,"","StSsdUtil,StSsdDbMaker,StiSsd","Load StiSsd(t)",kFALSE},
   {"StiPxl"   ,"","",""                           ,"","StPxlUtil,StPxlDbMaker,StiPxl","Load StiPxl",kFALSE},
   {"StiIst"   ,"","",""                           ,"","StIstUtil,StIstDbMaker,StiIst","Load StiIst",kFALSE},
+  {"StiTestSimpleBox", "", "", "", "",              "", "Flag to build specific test Sti geometry", kFALSE},
+  {"StiTestSimpleBox2", "", "", "", "",             "", "Flag to build specific test Sti geometry", kFALSE},
+  {"StiTestSimpleBox8", "", "", "", "",             "", "Flag to build specific test Sti geometry", kFALSE},
+  {"StiTestSimplePlane", "", "", "", "",            "", "Flag to build specific test Sti geometry", kFALSE},
+  {"StiTestSimpleTube", "", "", "", "",             "", "Flag to build specific test Sti geometry", kFALSE},
+  {"StiTestSimpleTubeSector", "", "", "", "",       "", "Flag to build specific test Sti geometry", kFALSE},
+  {"StiTestEnclosedTubes", "", "", "", "",          "", "Flag to build specific test Sti geometry", kFALSE},
+  {"StiTestOverlapTubes", "", "", "", "",           "", "Flag to build specific test Sti geometry", kFALSE},
+  {"StiTestNoOverlapTubes", "", "", "", "",         "", "Flag to build specific test Sti geometry", kFALSE},
 
   // left for historical purpose
   {"StiLibs"    ,"","","StiTpc,StiSvt,StiSsd,BTofUtil"   
@@ -1503,6 +1523,7 @@ Bfc_st BFC[] = {
   {"PxlIT"  ,""  ,"","ITTF",""                             ,"Sti,StiPxl","Sti tracking: Pixel geom",kFALSE},
   {"IstIT"  ,""  ,"","ITTF",""                               ,"Sti,StiIst","Sti tracking: Ist geom",kFALSE},
   {"SstIT"  ,""  ,"","ITTF",""                               ,"Sti,StiSst","Sti tracking: Sst geom",kFALSE},
+  {"TestIT" ,""  ,"","ITTF",""                             ,"Sti,StiTest","Sti tracking: Test geom",kFALSE},
 
   {"BTofIT"  ,""  ,"","ITTF",""                            ,"Sti,StiBTof","Sti tracking: BTof geom",kFALSE},
   {"NoSvtIT"     ,""  ,"","-SvtIT",""                    ,"","ITTF: track with switch off SVT geom",kFALSE},
diff --git a/StBFChain.cxx b/StBFChain.cxx
index 62d6978..fd39171 100644
--- a/StBFChain.cxx
+++ b/StBFChain.cxx
@@ -425,6 +425,7 @@ Int_t StBFChain::Instantiate()
 
       // old logic for svt and ssd
       if (GetOption("NoSvtIT")){
+	mk->SetAttr("useSvt"	, ".remove");
 	mk->SetAttr("useSvt"	,kFALSE);
       } else {
 	if (GetOption("SvtIT")){
@@ -434,6 +435,7 @@ Int_t StBFChain::Instantiate()
       }
       if (   GetOption("NoSsdIT") &&
 	    !GetOption("SstIT") ){
+	mk->SetAttr("useSsd"	,".remove");
 	mk->SetAttr("useSsd"	,kFALSE);
       } else {
 	if (GetOption("SsdIT")){
@@ -462,6 +464,21 @@ Int_t StBFChain::Instantiate()
 	mk->SetAttr("useSst"	 ,kTRUE);
 	mk->SetAttr("activeSst"  ,kTRUE);
       }
+      if (GetOption("TestIT")){
+
+         if      (GetOption("StiTestSimpleBox"))        mk->SetAttr("StiTestSimpleBox", true);
+         else if (GetOption("StiTestSimpleBox2"))       mk->SetAttr("StiTestSimpleBox2", true);
+         else if (GetOption("StiTestSimpleBox8"))       mk->SetAttr("StiTestSimpleBox8", true);
+         else if (GetOption("StiTestSimplePlane"))      mk->SetAttr("StiTestSimplePlane", true);
+         else if (GetOption("StiTestSimpleTube"))       mk->SetAttr("StiTestSimpleTube", true);
+         else if (GetOption("StiTestSimpleTubeSector")) mk->SetAttr("StiTestSimpleTubeSector", true);
+         else if (GetOption("StiTestEnclosedTubes"))    mk->SetAttr("StiTestEnclosedTubes", true);
+         else if (GetOption("StiTestOverlapTubes"))     mk->SetAttr("StiTestOverlapTubes", true);
+         else if (GetOption("StiTestNoOverlapTubes"))   mk->SetAttr("StiTestNoOverlapTubes", true);
+
+         mk->SetAttr("useTestGeom", kTRUE);
+         mk->SetAttr("activeTestGeom", kFALSE);
+      }
 
       // other sub-systems
       if (GetOption("BTofIT")){
-- 
1.8.2.GIT

