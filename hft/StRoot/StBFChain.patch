From c7476fba4919815366deec20bcbf7d7bddcd4ed3 Mon Sep 17 00:00:00 2001
From: Dmitri Smirnov <d.s@plexoos.com>
Date: Tue, 6 May 2014 17:40:57 -0400
Subject: [PATCH 01/10] Individual options for making HFT hits

---
 BigFullChain.h | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/BigFullChain.h b/BigFullChain.h
index 2e3010b..1278dc2 100644
--- a/BigFullChain.h
+++ b/BigFullChain.h
@@ -1367,6 +1367,15 @@ Bfc_st BFC[] = {
   {"pxlHit"      ,"","","pxlUtil,event,pxlDb",      "StPxlHitMaker","StPxlHitMaker","Pxl Hit Maker",kFALSE},
   //{"pxlMon"    ,"","","StEvent"              ,"StPxlMonMaker","StPxlMonMaker","Example of Pxl QA",kFALSE},
 
+  {"istFastSim","","","StMcEvent,StEvent"
+     ,                               "StIstFastSimMaker","StIstFastSimMaker","FastIstSimulator",kFALSE},
+  {"istRaw"     , "" , "" , "istUtil istDb"       , "StIstRawHitMaker"      , "StIstRawHitMaker"                        , "Load and run StIstRawHitMaker"      , kFALSE},
+  {"istCluster" , "" , "" , "istUtil"             , "StIstClusterMaker"     , "StIstClusterMaker"                       , "Load and run StIstClusterMaker"     , kFALSE},
+  {"istHit"     , "" , "" , "istUtil event istDb" , "StIstHitMaker"         , "StIstHitMaker"                           , "Load and run StIstHitMaker"         , kFALSE},
+  {"istQA"      , "" , "" , "istUtil StEvent"     , "StIstQAMaker"          , "StIstQAMaker"                            , "Produce QA histograms for IST"      , kFALSE},
+  {"istCalib"   , "" , "" , "istUtil"             , "StIstCalibrationMaker" , "StIstCalibrationMaker"                   , "Load and run StIstCalibrationMaker" , kFALSE},
+  {"sstHit"     , "" , "" , "ssddat"              , "StSsdPointMaker"       , "StSsdPointMaker"                         , "Load and run StSsdPointMaker"       , kFALSE},
+
   {"ssddat"      ,"","","ssd_daq"                             ,"","","SSD full chain for Real Data",kFALSE},
   {"ssd_daq","","","ssdCalDb,svt_T,-sls,-spa,ssdUtil","StSsdDaqMaker","StSsdDaqMaker","... SSD Daq",kFALSE},
   {"ssdfast"     ,"","","ssdDb,StMcEvent,StEvent","StSsdFastSimMaker","StSsdFastSimMaker",
-- 
1.8.2.GIT


From e88a803f32da9776c7cc63d6070a3d4ed9ce58f3 Mon Sep 17 00:00:00 2001
From: Dmitri Smirnov <d.s@plexoos.com>
Date: Mon, 21 Apr 2014 19:01:43 -0400
Subject: [PATCH 02/10] BFC options for building test geometries

---
 BigFullChain.h |  8 ++++++++
 StBFChain.cxx  | 13 +++++++++++++
 2 files changed, 21 insertions(+)

diff --git a/BigFullChain.h b/BigFullChain.h
index 1278dc2..a406536 100644
--- a/BigFullChain.h
+++ b/BigFullChain.h
@@ -1479,6 +1479,13 @@ Bfc_st BFC[] = {
   {"StiSst"   ,"","",""                        ,"","StSsdUtil,StSsdDbMaker,StiSsd","Load StiSsd(t)",kFALSE},
   {"StiPxl"   ,"","",""                           ,"","StPxlUtil,StPxlDbMaker,StiPxl","Load StiPxl",kFALSE},
   {"StiIst"   ,"","",""                           ,"","StIstUtil,StIstDbMaker,StiIst","Load StiIst",kFALSE},
+  {"StiTestSimpleBox", "", "", "", "",              "", "Flag to build specific test Sti geometry", kFALSE},
+  {"StiTestSimpleBox2", "", "", "", "",             "", "Flag to build specific test Sti geometry", kFALSE},
+  {"StiTestSimpleBox8", "", "", "", "",             "", "Flag to build specific test Sti geometry", kFALSE},
+  {"StiTestSimplePlane", "", "", "", "",            "", "Flag to build specific test Sti geometry", kFALSE},
+  {"StiTestSimpleTube", "", "", "", "",             "", "Flag to build specific test Sti geometry", kFALSE},
+  {"StiTestSimpleTubeSector", "", "", "", "",       "", "Flag to build specific test Sti geometry", kFALSE},
+  {"StiTestEnclosedTubes", "", "", "", "",          "", "Flag to build specific test Sti geometry", kFALSE},
 
   // left for historical purpose
   {"StiLibs"    ,"","","StiTpc,StiSvt,StiSsd,BTofUtil"   
@@ -1521,6 +1528,7 @@ Bfc_st BFC[] = {
   {"PxlIT"  ,""  ,"","ITTF",""                             ,"Sti,StiPxl","Sti tracking: Pixel geom",kFALSE},
   {"IstIT"  ,""  ,"","ITTF",""                               ,"Sti,StiIst","Sti tracking: Ist geom",kFALSE},
   {"SstIT"  ,""  ,"","ITTF",""                               ,"Sti,StiSst","Sti tracking: Sst geom",kFALSE},
+  {"TestIT" ,""  ,"","ITTF",""                             ,"Sti,StiTest","Sti tracking: Test geom",kFALSE},
 
   {"BTofIT"  ,""  ,"","ITTF",""                            ,"Sti,StiBTof","Sti tracking: BTof geom",kFALSE},
   {"NoSvtIT"     ,""  ,"","-SvtIT",""                    ,"","ITTF: track with switch off SVT geom",kFALSE},
diff --git a/StBFChain.cxx b/StBFChain.cxx
index fbd072c..7f25864 100644
--- a/StBFChain.cxx
+++ b/StBFChain.cxx
@@ -462,6 +462,19 @@ Int_t StBFChain::Instantiate()
 	mk->SetAttr("useSst"	 ,kTRUE);
 	mk->SetAttr("activeSst"  ,kTRUE);
       }
+      if (GetOption("TestIT")){
+
+         if      (GetOption("StiTestSimpleBox"))        mk->SetAttr("StiTestSimpleBox", true);
+         else if (GetOption("StiTestSimpleBox2"))       mk->SetAttr("StiTestSimpleBox2", true);
+         else if (GetOption("StiTestSimpleBox8"))       mk->SetAttr("StiTestSimpleBox8", true);
+         else if (GetOption("StiTestSimplePlane"))      mk->SetAttr("StiTestSimplePlane", true);
+         else if (GetOption("StiTestSimpleTube"))       mk->SetAttr("StiTestSimpleTube", true);
+         else if (GetOption("StiTestSimpleTubeSector")) mk->SetAttr("StiTestSimpleTubeSector", true);
+         else if (GetOption("StiTestEnclosedTubes"))    mk->SetAttr("StiTestEnclosedTubes", true);
+
+         mk->SetAttr("useTestGeom", kTRUE);
+         mk->SetAttr("activeTestGeom", kFALSE);
+      }
 
       // other sub-systems
       if (GetOption("BTofIT")){
-- 
1.8.2.GIT


From ad5b1d161a30f46c25ee2190bea144438adde0b6 Mon Sep 17 00:00:00 2001
From: Dmitri Smirnov <d.s@plexoos.com>
Date: Tue, 22 Apr 2014 16:27:17 -0400
Subject: [PATCH 03/10] Change to get rid of doubly defined StiMaker attributes

---
 StBFChain.cxx | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/StBFChain.cxx b/StBFChain.cxx
index 7f25864..8948a91 100644
--- a/StBFChain.cxx
+++ b/StBFChain.cxx
@@ -425,6 +425,7 @@ Int_t StBFChain::Instantiate()
 
       // old logic for svt and ssd
       if (GetOption("NoSvtIT")){
+	mk->SetAttr("useSvt"	, ".remove");
 	mk->SetAttr("useSvt"	,kFALSE);
       } else {
 	if (GetOption("SvtIT")){
@@ -434,6 +435,7 @@ Int_t StBFChain::Instantiate()
       }
       if (   GetOption("NoSsdIT") &&
 	    !GetOption("SstIT") ){
+	mk->SetAttr("useSsd"	,".remove");
 	mk->SetAttr("useSsd"	,kFALSE);
       } else {
 	if (GetOption("SsdIT")){
-- 
1.8.2.GIT


From e6926b68e29c1e2906c49ea878cce55d634293ac Mon Sep 17 00:00:00 2001
From: Dmitri Smirnov <d.s@plexoos.com>
Date: Thu, 24 Apr 2014 16:25:31 -0400
Subject: [PATCH 04/10] Added new options for Sti test to check overlapping and
 non-overlapping tubes

---
 BigFullChain.h | 2 ++
 StBFChain.cxx  | 2 ++
 2 files changed, 4 insertions(+)

diff --git a/BigFullChain.h b/BigFullChain.h
index a406536..51b5695 100644
--- a/BigFullChain.h
+++ b/BigFullChain.h
@@ -1486,6 +1486,8 @@ Bfc_st BFC[] = {
   {"StiTestSimpleTube", "", "", "", "",             "", "Flag to build specific test Sti geometry", kFALSE},
   {"StiTestSimpleTubeSector", "", "", "", "",       "", "Flag to build specific test Sti geometry", kFALSE},
   {"StiTestEnclosedTubes", "", "", "", "",          "", "Flag to build specific test Sti geometry", kFALSE},
+  {"StiTestOverlapTubes", "", "", "", "",           "", "Flag to build specific test Sti geometry", kFALSE},
+  {"StiTestNoOverlapTubes", "", "", "", "",         "", "Flag to build specific test Sti geometry", kFALSE},
 
   // left for historical purpose
   {"StiLibs"    ,"","","StiTpc,StiSvt,StiSsd,BTofUtil"   
diff --git a/StBFChain.cxx b/StBFChain.cxx
index 8948a91..71b0e61 100644
--- a/StBFChain.cxx
+++ b/StBFChain.cxx
@@ -473,6 +473,8 @@ Int_t StBFChain::Instantiate()
          else if (GetOption("StiTestSimpleTube"))       mk->SetAttr("StiTestSimpleTube", true);
          else if (GetOption("StiTestSimpleTubeSector")) mk->SetAttr("StiTestSimpleTubeSector", true);
          else if (GetOption("StiTestEnclosedTubes"))    mk->SetAttr("StiTestEnclosedTubes", true);
+         else if (GetOption("StiTestOverlapTubes"))     mk->SetAttr("StiTestOverlapTubes", true);
+         else if (GetOption("StiTestNoOverlapTubes"))   mk->SetAttr("StiTestNoOverlapTubes", true);
 
          mk->SetAttr("useTestGeom", kTRUE);
          mk->SetAttr("activeTestGeom", kFALSE);
-- 
1.8.2.GIT


From 91bf51da84a7e9ef2ee1f83f5ee1e186576c5ce2 Mon Sep 17 00:00:00 2001
From: Dmitri Smirnov <d.s@plexoos.com>
Date: Wed, 7 May 2014 16:01:19 -0400
Subject: [PATCH 05/10] Add BFC option for StiMaker to build ideal geometry

---
 BigFullChain.h | 2 ++
 StBFChain.cxx  | 4 ++++
 2 files changed, 6 insertions(+)

diff --git a/BigFullChain.h b/BigFullChain.h
index 51b5695..20a3454 100644
--- a/BigFullChain.h
+++ b/BigFullChain.h
@@ -1479,6 +1479,8 @@ Bfc_st BFC[] = {
   {"StiSst"   ,"","",""                        ,"","StSsdUtil,StSsdDbMaker,StiSsd","Load StiSsd(t)",kFALSE},
   {"StiPxl"   ,"","",""                           ,"","StPxlUtil,StPxlDbMaker,StiPxl","Load StiPxl",kFALSE},
   {"StiIst"   ,"","",""                           ,"","StIstUtil,StIstDbMaker,StiIst","Load StiIst",kFALSE},
+  {"StiIdealGeom", "", "", "", "","",
+                                 "Option to build Sti geometry using default or DB transormations", kFALSE},
   {"StiTestSimpleBox", "", "", "", "",              "", "Flag to build specific test Sti geometry", kFALSE},
   {"StiTestSimpleBox2", "", "", "", "",             "", "Flag to build specific test Sti geometry", kFALSE},
   {"StiTestSimpleBox8", "", "", "", "",             "", "Flag to build specific test Sti geometry", kFALSE},
diff --git a/StBFChain.cxx b/StBFChain.cxx
index 71b0e61..066bd9e 100644
--- a/StBFChain.cxx
+++ b/StBFChain.cxx
@@ -464,6 +464,10 @@ Int_t StBFChain::Instantiate()
 	mk->SetAttr("useSst"	 ,kTRUE);
 	mk->SetAttr("activeSst"  ,kTRUE);
       }
+
+      if (GetOption("StiIdealGeom")) mk->SetAttr("buildIdealStiGeom", true);
+      else                           mk->SetAttr("buildIdealStiGeom", false);
+
       if (GetOption("TestIT")){
 
          if      (GetOption("StiTestSimpleBox"))        mk->SetAttr("StiTestSimpleBox", true);
-- 
1.8.2.GIT


From d3927fe336a57d422dcc32ebadf5c6bb001c81ad Mon Sep 17 00:00:00 2001
From: Dmitri Smirnov <d.s@plexoos.com>
Date: Wed, 7 May 2014 17:52:00 -0400
Subject: [PATCH 06/10] Added option to create a tree used in event display

---
 BigFullChain.h | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/BigFullChain.h b/BigFullChain.h
index 20a3454..9fef44c 100644
--- a/BigFullChain.h
+++ b/BigFullChain.h
@@ -1665,6 +1665,8 @@ Bfc_st BFC[] = {
    ,                                                             "Creates tree in minimc.root file",kFALSE},
   {"SvtMatTree","","","","SvtMatchedTree"
    ,                              "StSvtPoolEventT,StSvtPoolSvtMatchedTree","Create SvtMatchedTree",kFALSE},
+  {"HftMatTree", "", "", "pxlUtil", "HftMatchedTree",
+	                      "libEve StHftPoolEventT StHftPoolHftMatchedTree", "Create HftMatchedTree", kFALSE},
   {"LAna"        ,"","","in,detDb,StEvent,tpcDb","StLaserAnalysisMaker"
    ,                                                   "StLaserAnalysisMaker","Laser data Analysis",kFALSE},
   {"SpinTag"     ,"","","",                              "","","WARNING *** Option is OBSOLETE ***",kFALSE},
-- 
1.8.2.GIT


From 8ed528fd51401741c55f37207ee8182139748063 Mon Sep 17 00:00:00 2001
From: Dmitri Smirnov <d.s@plexoos.com>
Date: Tue, 20 May 2014 16:49:07 -0400
Subject: [PATCH 07/10] SST changes from Jonathan Bouchet

---
 BigFullChain.h | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/BigFullChain.h b/BigFullChain.h
index 9fef44c..457f583 100644
--- a/BigFullChain.h
+++ b/BigFullChain.h
@@ -1241,6 +1241,7 @@ Bfc_st BFC[] = {
   {"dbutil"      ,""     ,"","detDb,StDbT"                 ,"","StDbUtilities","Load StDbUtilities",kFALSE},
   {"svtDb"       ,"svtDb","","tpcDb,SvtCL", "StSvtDbMaker","StSvtDbMaker","Load and run SvtDbMaker",kFALSE},
   {"ssdDb"      ,"ssdDb","","tpcDb,SsdUtil","StSsdDbMaker","StSsdDbMaker","Load and run SsdDbMaker",kFALSE},
+  {"sstDb"      ,"sstDb","","tpcDb,SsdUtil","StSstDbMaker","StSsdDbMaker","Load and run SstDbMaker",kFALSE},
   {"svtCalDb"    ,""     ,"","svtDb"         ,"","","Declare Calibrations/svt as while list member",kFALSE},
   {"ssdCalDb"    ,""     ,"","ssdDb"         ,"","","Declare Calibrations/ssd as while list member",kFALSE},
   {"eemcDb"      ,"eeDb" ,"","db,EEmcUtil",      "StEEmcDbMaker","StEEmcDbMaker","Load EEmcDbMaker",kFALSE},
@@ -1378,7 +1379,9 @@ Bfc_st BFC[] = {
 
   {"ssddat"      ,"","","ssd_daq"                             ,"","","SSD full chain for Real Data",kFALSE},
   {"ssd_daq","","","ssdCalDb,svt_T,-sls,-spa,ssdUtil","StSsdDaqMaker","StSsdDaqMaker","... SSD Daq",kFALSE},
-  {"ssdfast"     ,"","","ssdDb,StMcEvent,StEvent","StSsdFastSimMaker","StSsdFastSimMaker",
+  // the change in ssdfast is that it does not link to SsdDb, becasue we have now 2 Db makers : SstDb and SsdDb
+  // therefore this option should be added in the BFC options
+  {"ssdfast"     ,"","","StMcEvent,StEvent","StSsdFastSimMaker","StSsdFastSimMaker",
    "... SSD fast simulator"                                                                        ,kFALSE},
   {"ssd"         ,"","","ssdCalDb,sls,spa,spt"               ,"","","SSD full chain for simulation",kFALSE},
   {"sls","","","McEvent,Simu,svt_T,SvtCL"
-- 
1.8.2.GIT


From fbfb934daaae6b75dcafbf56e1c38b3f47bbc054 Mon Sep 17 00:00:00 2001
From: Dmitri Smirnov <d.s@plexoos.com>
Date: Tue, 27 May 2014 11:41:07 -0400
Subject: [PATCH 08/10] Added an option to run StiLajaTester from
 offline/hft/StHftPool

---
 BigFullChain.h | 1 +
 1 file changed, 1 insertion(+)

diff --git a/BigFullChain.h b/BigFullChain.h
index 457f583..9c4f769 100644
--- a/BigFullChain.h
+++ b/BigFullChain.h
@@ -1670,6 +1670,7 @@ Bfc_st BFC[] = {
    ,                              "StSvtPoolEventT,StSvtPoolSvtMatchedTree","Create SvtMatchedTree",kFALSE},
   {"HftMatTree", "", "", "pxlUtil", "HftMatchedTree",
 	                      "libEve StHftPoolEventT StHftPoolHftMatchedTree", "Create HftMatchedTree", kFALSE},
+  {"StiLajaTester", "", "", "", "StiLajaTester",  "StiLajaTester", "A maker to test track reconstruction with Sti", kFALSE},
   {"LAna"        ,"","","in,detDb,StEvent,tpcDb","StLaserAnalysisMaker"
    ,                                                   "StLaserAnalysisMaker","Laser data Analysis",kFALSE},
   {"SpinTag"     ,"","","",                              "","","WARNING *** Option is OBSOLETE ***",kFALSE},
-- 
1.8.2.GIT


From d5c82c21ffdb68309bb07969c188db835c2f6109 Mon Sep 17 00:00:00 2001
From: Dmitri Smirnov <d.s@plexoos.com>
Date: Thu, 12 Jun 2014 18:21:53 -0400
Subject: [PATCH 09/10] Load a boost library since StHftPool/HftMatTree depends
 on it

---
 BigFullChain.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/BigFullChain.h b/BigFullChain.h
index 9c4f769..0bf892d 100644
--- a/BigFullChain.h
+++ b/BigFullChain.h
@@ -1669,7 +1669,7 @@ Bfc_st BFC[] = {
   {"SvtMatTree","","","","SvtMatchedTree"
    ,                              "StSvtPoolEventT,StSvtPoolSvtMatchedTree","Create SvtMatchedTree",kFALSE},
   {"HftMatTree", "", "", "pxlUtil", "HftMatchedTree",
-	                      "libEve StHftPoolEventT StHftPoolHftMatchedTree", "Create HftMatchedTree", kFALSE},
+	                      "libEve boost_program_options StHftPoolEventT StHftPoolHftMatchedTree", "Create HftMatchedTree", kFALSE},
   {"StiLajaTester", "", "", "", "StiLajaTester",  "StiLajaTester", "A maker to test track reconstruction with Sti", kFALSE},
   {"LAna"        ,"","","in,detDb,StEvent,tpcDb","StLaserAnalysisMaker"
    ,                                                   "StLaserAnalysisMaker","Laser data Analysis",kFALSE},
-- 
1.8.2.GIT


From 0ab2f0c8501ed6d892b2fad2cec3cfe3cbfeb532 Mon Sep 17 00:00:00 2001
From: Dmitri Smirnov <d.s@plexoos.com>
Date: Thu, 12 Jun 2014 18:23:06 -0400
Subject: [PATCH 10/10] Add explicit dependence of PxlHit on PxlCluster on
 PxlRaw packages

---
 BigFullChain.h | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/BigFullChain.h b/BigFullChain.h
index 0bf892d..e02d440 100644
--- a/BigFullChain.h
+++ b/BigFullChain.h
@@ -1364,8 +1364,8 @@ Bfc_st BFC[] = {
   {"pxlFastSim"  ,"","","StMcEvent,StEvent"
    ,                                           "StPxlSimMaker","StPxlSimMaker","FastPixelSimulator",kFALSE},
   {"pxlRaw"      ,"","","pxlUtil,pxlDb",  "StPxlRawHitMaker","StPxlRawHitMaker","Pxl Raw Hit Maker",kFALSE},
-  {"pxlCluster"  ,"","","pxlUtil",      "StPxlClusterMaker","StPxlClusterMaker","Pxl Cluster Maker",kFALSE},
-  {"pxlHit"      ,"","","pxlUtil,event,pxlDb",      "StPxlHitMaker","StPxlHitMaker","Pxl Hit Maker",kFALSE},
+  {"pxlCluster"  ,"","","pxlUtil,pxlRaw",      "StPxlClusterMaker","StPxlClusterMaker","Pxl Cluster Maker",kFALSE},
+  {"pxlHit"      ,"","","pxlUtil,event,pxlDb,pxlCluster",      "StPxlHitMaker","StPxlHitMaker","Pxl Hit Maker",kFALSE},
   //{"pxlMon"    ,"","","StEvent"              ,"StPxlMonMaker","StPxlMonMaker","Example of Pxl QA",kFALSE},
 
   {"istFastSim","","","StMcEvent,StEvent"
-- 
1.8.2.GIT

